6. 심볼형
- 유일하고 변경 불가능한 기본값을 만듬
- 객체 속성의 키 값으로 사용할 수 있음

const symbol1 = symbol1("apple")
const symbol2 = symbol1("apple")
console.log(symbol1 === symbol2) // false, === : 타입과 값을 모두 비교


자바스크립트의 타입 변환
-변수는 타입이 고정되어 있지 않음
-변수에 다른 타입의 값을 대입

let a = 10;
...
a = 'JS' // 가능

1. 자동으로 타입이 변환(암시적 타입 변환)
const a = '20';//문자열
const b = "10";
let result = a + b;//2010 +는 연결연산으로됨

result = a - b; // 10
result = a * b; // 200

const c = 'js';
result = c - a; // NaN

*NaN(Nat a Number)
-정의되지 않은 값이나 표현할 수 없는 값
-숫자로 변환할 수 없는 연산을 시도한 경우

2. 명시적 형변환
-자동으로 타입 변환을 지원하지만 명시적으로 변환할 필요가 있을 때 사용하는 함수

const a = "19";
const b = "11";

Number() : 문자를 숫자로 변환시켜주는 함수
result = Number(a) + Number(b); // 30
Number(a + b) (x)//1911

Strign() : 숫자는 불린등을 문자형으로
Boolean() : 문자나 숫자등을 불린으로 변경
Object() : 모든 자료형을 객체형으로 변환
parseInt() : 문자열형을 int형으로 변환
parseFloat() : 문자열형을 float형으로 변환

대화상자
1. alert() : 사용자에게 메시지를 보여주고 확인을 기다림

2. confirm() : 사용자에게 메시지를 보여주고 확인, 취소를 누르면 true, false 가 반환된다.

3. prompt() : 메시지를 보여주고 입력한 데이터를 문자열로 반환

연산자(Operator)
1. 산술연산자
+ - * /  %  **(거듭제곱)

2. 비교연산자
피연산자 사이의 상대적인 크기를 판단하여 참 또는 거짓을 반환

아스키코드
컴퓨터는 0과 1밖에 모르기 때문에 숫자와 문자를 대응시켜 만든 방식

3. 대입 연산자
= : 우측의 값을 왼쪽(변수)에 대임
+= : 우측의 값을 왼쪽(변수)의 값과 연산 후 다시 왼쪽의 값에 대입
-= : 위와 동일
*= : "
